apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.5
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'org.seleniumhq.selenium:selenium-java:2.48.2'
    compile 'commons-io:commons-io:2.4'
	
	testCompile 'junit:junit:4.12'
    testCompile 'org.testng:testng:6.9.9'
    testCompile 'io.fabric8.devops.apps:jenkins:2.2.74'
    testCompile 'org.seleniumhq.selenium:selenium-java:2.48.2'
}

test {
		println "soos"
		println "soos"
		println "soos"
		println "soos"
		
	  // enable TestNG support (default is JUnit)
	  useTestNG()
		
	  // set a system property for the test JVM(s)
	  systemProperty 'some.prop', 'value'
	
	  // explicitly include or exclude tests
	  include 'testng/**'
	
	  // show standard out and standard error of the test JVM(s) on the console
	  testLogging.showStandardStreams = true
	
	  // set heap size for the test JVM(s)
	  minHeapSize = "128m"
	  maxHeapSize = "512m"
	
	  // set JVM arguments for the test JVM(s)
	  jvmArgs '-XX:MaxPermSize=256m'
	
	  // listen to events in the test execution lifecycle
	  beforeTest { descriptor ->
	     logger.lifecycle("Running test: " + descriptor)
	  }
	
	  // listen to standard out and standard error of the test JVM(s)
	  onOutput { descriptor, event ->
	     logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
	  }
}
uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
